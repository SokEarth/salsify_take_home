name: Automate gifmachine app deployment with terraform

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    environment: gifmachine
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: runner
          POSTGRES_DB: gifmachine_tester
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U runner"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    env:
      DB_ADAPTER: postgresql
      DB_USERNAME: runner
      DB_PASSWORD: runner
      DB_HOST:  localhost
      DB_NAME: gifmachine_tester
      RACK_ENV: test
          
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'
          bundler-cache: true
          
      - name: Install dependencies
        working-directory: gifmachine
        run: bundle install

      - name: Setup database
        working-directory: gifmachine
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate
  
  terraform:
    name: Deploy AWS Infrastructure with Terraform
    runs-on: ubuntu-latest
    environment: gifmachine

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: terraform

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform

      # Terraform Apply
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan
      #   working-directory: terraform